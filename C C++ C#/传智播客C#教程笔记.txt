# 传智播客C#教程笔记

> .net是一种平台，一种技术
C#是一种基于.net平台的编程语言

C#也是比较强大的，可以开发桌面应用程序windform，网站ASP.NET，嵌入式，window phone软件

层次关系：解决方案>项目>命名空间>类>方法

> 类文件是以.cs结尾的

Main方法是我们项目的入口方法，当Main方法执行完了，程序就结束了！！！
一个程序最多只有一个Main方法

打开时，最好打开解决方案，这样与这个解决方案关联的项目的所有文件也就打开了
分号表示一句话，表示语句的结束

	namespace D:\pytest
	{
		class Demo1
		{
			static void Main(args[] string)
			{
				Console.WriteLine('hello world!');
				Console.ReadKey();
				//当执行到此句是会暂停到这里，等待用户从键盘上键入一个键，键入之后，程序才继续进行！！！
			}
		}
	}

开发 .net 可以开发多达几十种语言开发，多语言单平台的平台

软件系统依赖关系：
	操作系统->公共语言运行库CLR，相当于翻译->.net 框架类库FCL->高级编程语言

MSAL:微软中间语言，可以将其他语言转为微软的语言，然后微软语言在转为其他语言，所以所有的语言都可以沟通了
这中间最重要的就是微软这个中间语言，CLR理解中间语言，调用操作系统的API启动硬件，也就是程序的真正执行是在CLR！！！

CLR中又有：CLS(理解其他语言的规范，语法)
CTS(翻译的词法，有什么词可用)
也就是根据CLS语法组合CTS单词拼成一个语句，是window能理解的语言

在C#中+也可以连接两个字符串

Console.WriteLine();支持占位符
Console.WriteLine("我叫{0},今年{1}岁了",name,age)这里是有顺序对应的！！！
占位符可以重复使用
如果要取变量，一定要有，多一个变量，没有用到，不会出错！！！

Console用于输出时，永远是输出第一个参数，后面的参数只是替换第一个参数的占位符！！！

变量：
	变量必须先声明后使用
	变量就是数据在内存中的地址，内存地址难记忆，于是就有了变量
	1.	int age ;
		int age = 22;
	2. String name,sex,address;//一次声明多个变量
	3. String name = "朱明浩",sex = "男",address = "高州"
	注意：一个变量名只能声明一次类型，变量允许多次赋值，覆盖原来的值！！！

	
读取用户输入的一行内容到字符串：

	String input = Console.ReadLine()

-----------------------

对象（Object）类型 是 C# 通用类型系统（Common Type System - CTS）中所有数据类型的终极基类。
Object 是 System.Object 类的别名。
所以对象（Object）类型可以被分配任何其他类型（值类型、引用类型、预定义类型或用户自定义类型）的值。
但是，在分配值之前，需要先进行类型转换。
当一个值类型转换为对象类型时，则被称为 装箱；另一方面，当一个对象类型转换为值类型时，则被称为 拆箱。

动态（Dynamic）类型
您可以存储任何类型的值在动态数据类型变量中。这些变量的类型检查是在运行时发生的。
声明动态类型的语法：

	dynamic <variable_name> = value;

-----------------------------------

转义字符：与c和java中的一样

	常用的转义：
	\b 退格键，也就是删除前一个字符
	\\ 表示一个 \ 
	\\\\ 表示两个 \

	在字符串前加@有两种意义：
	1.字符串中如果有\则不理解为转义，直接原样输出
	2.字符串中直接回车换行也不会报错
	注意：如果要在字符串中输入引号，则需要两个引号，表示一个引号 ""

	Console.WriteLine(@"d:\test\demo");//不转义了！！！

### 算术运算符

与其他编程语言的一样！！！
+-*/运算的两个操作数的类型必须相同，经过运算后的类型也必须为操作数的类型
也就是 10/3=3

### 类型上的自动转换

	范围小的可以自动转换为范围大的，比如double d = int * double;

在内存中所有的加减乘除运算，操作数的类型必须都相同，如果不相同时，以下情况可以先自动转换再参与与其他操作数运算 

比如 3*3+111.11 前面的结果为int，在参与下一步运算时，自动转为double与111.11运算！！！

> 凡是有可能丢失精度的精度都不能自动转换
多个操作数之间的运算，结果的类型为精度高的类型，也就是在操作数int和double的运算，结果总为double

技巧：double res = 1.0*10/3 任何数乘或者除1.0就是将结果转为了double类型了

> 能不能自动转换主要考虑：
	1. 范围 自动转向大范围的 也就是要装的下 
	2. 精度 自动转向高精度的 也就是不能损失精度

### 强制转换：

	语法：int a = (int)3.14;
	强转是会丢失精度的！！！
	不会进行四舍五入
	但是需要注意的是：必须是同一大类型的才能强转，也就是数字转数字！！！

	public static void Main(string[] args)
		{
			//所有定义的变量如果没使用，是会警告的，因为占用内存
			//char不能隐式转为string
			string name = 'z';
			//char只能存一个字符，字母或汉字，空字符，而且只能是一个
			char ch = '好';
			double age = 33;
			//decimal必须在后面加m
			decimal money = 22.2m;
			Console.ReadKey(true);
			Console.ReadLine();
		}

	字符串转数字：比如接受控制台输入的数字（其实是字符串），转为数字，以便运算

	语法：int age = convert.ToInt32(inpStr);
	参数为待转换字符
	Convert.ToString(var) 所有的类型都可以转字符串！！！

错误处理机制：

	try
	{
		有可能出错的代码
	}
	catch
	{
		出错后的处理代码，如果没有错，不会执行到此处
	}





















学习进度：


























