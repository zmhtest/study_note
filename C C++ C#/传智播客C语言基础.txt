## 传智播客C语言基础

> C语言是C++的基础，C++是兼容C语言的！！！

软件的分类：

	系统软件：Windows Linux unix
	应用软件：微信 QQ office

人机交互方式：

	1. 命令行 所有图形化界面的操作都可以用命令行实现 （成就了IBM）

	2. 图形化界面 底层还是操作命令的 （Windows就是因此而成功）

	3. 自然交互界面：声音，触摸屏 （iPhone就是因此而成功）


学习任何一门语言都需要了解：语言定义、语法规则	

计算机硬件结构组成 ：

	输入设备->内存->CPU（控制器，运算器）->输出设备

二进制就是用**高电压、低电压**来控制的

用二进制就可以完成对计算机的所有操作!!!

Bit 位 度量数据的最小单位
Byte 字节 最常用的基本的单位

问：为什么500G硬盘显示只有465G呢？

答：这是硬盘开发商采用的单位不一样，他们采用1000进制，所以 (500G*1000M*1000K*1000B)/(1024^3)=465G

对于二进制与十进制的转换，可以不理会0，如果是1，则是2的n次方，然后相加即可
比如：110011 2^0+2^1+2^4+2^5=51
可以看出：最低位无论是多少进制，值都为本身，因为就是 本身*1=本身 ！！！

指令：对计算机进行程序控制的最小单位

指令系统：指令的集合 电脑X86 手机ARM

深入理解指令：同一个指令在不同的指令系统实现的功能不一样，要在不同的指令系统实现相同的功能，往往使用不同的指令！！！

机器指令格式：操作数--操作码 比如 1+2
操作数：执行的对象
操作码：要执行什么操作

编译器就是一个翻译中间人，将高级语言翻译成计算机能够理解的二进制代码

汇编语言就是用一些特定的单词表示二进制机器语言，但是计算机不认识汇编，于是就有了汇编语言的编译器

> 汇编也是面向机器的，机器不同语言也就不同，所以应用范围小 只有最求极致的速度时才考虑汇编，c语言已经可以取代汇编了

通过在不同平台上安装不同的平台库，就可以将C语言解释成相应平台机器能够理解的机器语言，这样我们就可以只关注数据加工而忽略硬件

计算机的底层都是面向过程的！！！

所有的操作系统源代码90%都是用C语言写的！！！

C语言的速度比java快5倍左右！

现在是物联网时代，但是这些 ‘物’ 的性能不可能有电脑的那么强大，所以需要性能更强的的编程语言来提高他的性能，所以C还是很有前景的！！！

但是在网速巨慢的时代，性能好像也不是那么重要，所以可以考虑使用python语言

C可以做嵌入式开发，游戏

C是与平台无关的！！！

C很灵活，自由，可以直接操作内存，CPU

代码实现周期较长

学会C/C++走遍全球都不怕

C是写外挂，做黑客必须掌握的语言

C/C++大小通吃

你的决心才能激发你的最大潜能。

一定要多敲代码

第一个C程序

	//头文件 .h 文件 head文件，通过头文件可以找到头文件里面的所有函数
	#include<stdio.h>
	void main()
	{
		printf("hello world!");
		getchar();//等待输入一个字符
	}


	system("[start] ")函数可以调用系统的很多命令，相当于在命令行中输入
start 表示并行打开所有的程序

### 转义字符

	\ddd 表示三位八进制代表的字符 putchar('\123')
	 \xdd 表示两位十六进制所对应的字符 putchar('\x68')
	 
	 puts("helloworld");//输出一个字符串

-----------------------------------------------

	#include <stdio.h>//标准输入输出，比如printf()和getchar()这些函数都在这个头文件里

	#include <windows.h>//要引入这个头文件才能调用system()函数来操作Windows的命令！！！

	void test()
	{
		system("control");
	}

	int main()//程序的入口
	{
		//调用test函数打开控制面板！！！
		test();

		//可以直接打印字符串
		printf("hello china");

		//%s表示字符串占位符，%c表示字符占位符
		printf("%s\n", "hello world!");
		printf("%c%c%c\n",'z','m','h' );

		//打开一个计算器
		system("calc");
		
		//使用putchar()打印一个字符
		putchar('z');

		// putchar()函数除了可以直接打印出一个字符，还可以将ascii打印成对应的字符！！！
		//还可以是一个八进制数字0开头，十六进制也是可以的0x开头
		putchar(97);

		//打印一个换行等特殊字符
		putchar('\n');
		putchar('\"');
		putchar('\\');
		putchar('\'');

		//等待输入,如果没有此句，会一闪而过看不到输出，调试阶段一般要有此句！！！
		getchar();
		
		//函数的返回值
		return 0;
	}

### system()函数详细用法

> std是任何平台都有的，标准的
Windows.h只能在Windows平台使用！！！

	首先引入头文件
	#stdlib.h
	在main函数中，system("命令");

### windows 下的常用函数

1.MessageBoxA(0，"content","title",对话框的类型数字表示)

		#include <windows.h>
		int main()
		{
			MessageBoxA(0,"welcome to my soft!","welcome",6);
			//最后一个参数说明：
			//0：确定
			//1：确认 取消
			//2：终止 重试 忽略
			//3：是 否 取消
			//4：是 否
			//5：重试 取消
			//...
			return 0;
		}

2.ShellExecuteA(0,"open","tasklist",0,0,1)
最后一个参数说明：
	0 隐藏
	1 正常
	3 最大化
	6 最小化

	ShellExecuteA(0, "open", "notepad", 0, 0, 6);

##### 分配内存函数malloc   

stdlib.h 
malloc(10000000)//单位字节
Sleep  (5000)   5000毫秒 5秒

#### 使用sprintf()函数初始化字符串

	#include <stdio.h>
	#include <windows.h>
	#include <stdlib.h>
	int main(int argc, char const *argv[])
	{
		// char str[50] = "notepad";//50只是作为一个缓冲区
		// char str[50] = "ipconfig";
		
		char str[50];

		// 初始化字符串
		// sprintf(str,"%s","calc");//初始化一个

		// 这是一个很老的函数
		sprintf(str,"%s%s","note","pad");//初始化多个字符串，组成一个命令
		
		system(str);
		system("pause");
		return 0;
	}

### 常量与变量

	//变量的命名
	int %a;
	int !b;
	int -c;
	int #c;
	int c#;
	//变量的命名中不能含有%!#-
	int $;
	int $a;
	int date;
	int 3date;//不能以数字开头
	int char;//不能是关键字
	int int;
	
> 变量的命名：- ! %开头是不合法的！

查看变量的地址&var
如果在内存中直接改变变量的值，那么输出的结果是改变之后的值！！！
在visual studio中是可以改变内存中变量的值的！！！

	#include <stdio.h>

	int main(int argc, char const *argv[])
	{
		
		//%x 表示十六进制占位符
		//%d 表示十进制占位符
		//可以通过设置断点来观察变量的值
		
		int num = 1;
		//这里只需打印一次，取得变量的内存地址即可，方便我们在内存中搜索观看，下面的不用
		printf("%x\n",&num );

		num = 3;

		num = 5;
		//注意：同名变量不能重复声明，只能重复赋值，变量理解为宾馆的房间
		getchar();
		return 0;
	}


> 游戏外挂的原理就是：
先获得某个变量的内存地址，然后修改它！！！

#### 变量声明的意义

	1.可以确定这个变量的范围
	2.建立变量符号表
	3.指定了系统如何解释

> 注意：printf函数不能直接打印数字，它只能打印字符串，printf("%d",10);意思是将10转成字符串，然后交给printf函数进行打印！！！


### 命令行的for循环

	for /l %i in (1,1,5) do calc 

案例：接受用户输入一个数ｎ，打开ｎ个程序

	#include <stdio.h>
	#include <stdlib.h>		
	int main()
	 {
	 	int num;
	 	printf("请输入一个数：");
	 	// 接受用户输入，并保存到num的地址中！
	 	scanf("%d",&num);
	 	char str[50];

	 	//两个%表示一个% 这个函数的意思是将内容映射到字符串！
	 	如果@calc则表示隐式执行，只有结果没有过程！
	 	//默认是以同步的方式打开：所谓同步就是，要等打开的一个程序关闭后才能打开下一个程序
	 	如果前面有start就是异步打开，也就是不受其他程序的影响，一次性打开全部！！！
	 	sprintf(str,"for /l %%i in (1,1,%d) do calc",num);
	 	system(str);
	 	//让系统暂停一下
	 	system("pause");

	 	return 0;

	 }

	**for /l %i in (1,1,5) do echo hello**
	结果：
	C:\Users\Administrator>echo hello
	hello

	C:\Users\Administrator>echo hello
	hello

	C:\Users\Administrator>echo hello
	hello

	C:\Users\Administrator>echo hello
	hello

	C:\Users\Administrator>echo hello
	hello

	**for /l %i in (1,1,5) do @echo hello**
	 结果：

	C:\Users\Administrator>for /l %i in (1,1,5) do @echo hello
	hello
	hello
	hello
	hello
	hello

问：变量为什么要初始化？
答：因为这块内存在被这个程序占有之前有其他的程序往里面写了数据，而这些数据并不会马上清空，所以如果不初始化变量的话，使用的将是其他程序所留下来的垃圾数据，初始化就是清空原有内存数据，写入新的数据的过程，所以，变量的使用必须初始化！！！

### 内存
操作系统是根据内存地址和内存单元来管理内存的！还有一张表专门标记着内存地址是否可用的表，也就是当一个程序结束受，他原来所占用的内存被标记为可用，但是内存地址对应的内存单元的数据并没有被清空，需要我们程序员手动清空原有的内存垃圾！！！

C语言不保结果，编译通过，结果不一定正确，C与java不同，java会对一个变量自动初始化为0；

### 常量

	#define PI 3.1415

define本质上是替换，也就是将后面的值替换成前面的，注意，后面不能有分号！！！

易语言就是这样做的！！！

使用define可以实现代码混淆，让鬼都看不懂

常量是不能取地址的！！！

const是伪常量，程序中不能修改，但是在内存中是可以修改的！！！
const float PI = 3.14; 

案例：实现易语言

	新建头文件 标识符.h
	替换c语言的32个关键字

	#define 自动 auto
	#define 终止 break
	#define 否则 else
	#define 枚举 enum
	#define 双精度浮点数据 double
	#define 整型 int
	#define 浮点型 float
	#define 字符型 char
	#define 情况 case
	#define 固定 const
	#define 默认 default
	#define 执行 do
	#define 外部 extern
	#define 正当 for
	#define 跳转 goto
	#define 如果 if
	#define 寄存器 register
	#define 返回 return
	#define 短整数 short
	#define 有符号 signed
	#define 求大小 sizeof
	#define 静态 static 
	#define 结构体 struct
	#define 选择 switch
	#define 重定义 typedef
	#define 联合 union
	#define 无符号 unsigned
	#define 空类型 void
	#define 隐式变量 volatile
	#define 当 while
	#define 主函数 main
	#define 打印 printf
	#define 执行 system

	#include <stdlib.h>
	void notepad()
	{
		system("notepad");
	}

	#define 记事本 notepad();

	源代码：实现纯中文编程！！！

	//引入头文件，这里双引号表示引入我们自己的头文件而不是系统的！！！
	当然我们自己的头文件已经包含了系统的。
	#include "标识符.h"

	整型 主函数()
	{
		记事本
		进程管理
		等待
		返回 0;
	}


> 在头文件中双引号和尖括号的区别：

> *.bat就是批处理文件，相当于在命令行一次输入这个文件的命令，按顺序执行

> 可以利用visual studio提供的MFC，我们自己写一个IDE，可以编译C/C++原码

	实现步骤：

	1. 新建MFC应用程序项目

	2. 设置文件扩展名 cpp

	3. 选中下面的三个支持

	4. 选中所有的高级功能

	5. 生成的类里面，基类一定要选CRichEditView

	6. 打开资源视图，找到Ribbon,添加一个类别，然后添加一个按钮，
	   为这个按钮添加事件处理程序双击这个按钮即可，
	   再类列表中选择CMainFrame

	7. 编辑MainFrm.cpp 在里面添加

		#include <stdlib.h>
		system("");//里面写入VC的编译指令的路径

	8. 修改xxxDoc.cpp文件，添加CRichEditDoc::m_bRTF = FALSE;

	9.生成即可


问题：要不要禁用符号加载呢？

###### 需要注意的是：不能直接修改VC原有的.bat文件，我们的做法是，复制一份，在副本基础上进行操作！！！

还需要注意的是：一定要在.bat文件中的X86选项下添加我们要执行的代码
比如：进入目录cd xxx 编译cl xxx.cpp 运行 xxx.exe 

#### 换背景和播放声音案例

	SystemParametersInfoA(20, 0, "C:\\Users\\Administrator\\Pictures\\1.jpg", 3);
	第一个参数20代表桌面，第二个参数0默认，第三个参数路径，第四个参数3表示马上生效

为了更加隐蔽的执行我们的恶作剧程序，可以将程序编译成一个dll模块，然后利用注射工具把他注射到一个正常的进程！！！

#### 吓人程序

	while (1)
	{
		MessageBoxA(0, "魔鬼出现", "你正在和魔鬼聊天",1);
		Sleep(2000);
	}
	注意这个Sleep()S是大写的！！！

### 编写一个动态库文件

	函数的开头必须是：_declspec(dllexport) void 函数名()
	{

	}

变量的类型就起到标注这个变量的大小的作用，因为变量名只是标记了一个开始的位置start ，类型就是相当于规定了一个length！！！

#### 各种进制的相互转换

浮点数的二进制表示：
比如：0.875 
计算过程：乘以2，然后取整，小数部分再乘以2，进一步取整
所以：0.875 1.75 1	 
	  0.75  1.5  1
	  0.5   1    1
	  顺序排列：0.111
	  验证：1*2^-1+1*2^-2+1*2^-3 = 0.5 + 0.25 + 0.125 = 0.875

任何进制的转换都可以先转换成十进制，然后转换成二进制来进行	  

规律：一个八进制数可以用3位二进制数表示
	一个十六机制数可以用4位3二进制来表示

为什么说32位的系统最大只能读取4G的内存的？
4G = 4*1024M = 4*1024*1024*1024字节 = 2^2 2^10 2^10 2^10 = 2^32

时刻记住：1 2 4 8 16 32 64 128 256 512 1024 
以及这些数字的组合的和，组合就可以表示所有的数！！！

技巧：给出一个十进制数，转化成八进制或者十六进制

思路：首先将这个十进制数按照8或者16进行乘法分解，分解成n*8或者n*16的形式，前面这个n就是对应位数该填的数！！！
比如38转为八进制：4*8+6 = 46
转为16进制：2*16+6 = 26

这里不太懂？
十六进制转其他进制：
十六进制数：D  E  B  C  F  1 5 3 2 A

基数对应的十进制数：13 14 11 12 15 1 5 3 2 10
用基数乘以16^n然后相加即可得出十进制大小

转换成二进制只需将各位用4位二进制数表示即可
对应二进制：110111101011110011110001 0101001100101010

十六进制直接转换成八进制，难，先转二进制，然后算出三位二进制即可：
001 101 111 010 111 100 111 100 010 101 001 100 101 010
15727474251452

八进制转二进制：
3   5   6   3   6   7 
011 101 110 011 110 111
转为十进制：3*8^5+5*8^4+6*8^3+3*8^2+6*8^1+7 = ...

得出的规律是：任何进制转为十进制都是简单的，一样的，十六进制和八进制可以直接根据每一位的数字对应转化即得二进制，二进制也是只要按照三位、四位划分也可以很方便转为八进制、十六进制，但是八进制和十六进制的转换必须借助中间的二进制，不能直接转换！！！


sizeof(变量)可以计算出这个变量的大小，单位：字节
这个sizeof只是一个单目运算符，而不是函数

%o 表示八进制
%x 表示十六进制
以上都是表示无符号的！！！

极限头文件：#include <limits.h>
SHRT_MAX SHRT_MIN 有符号的
USHRT_MAX USHRT_MIN 无符号的

### 整数

算法很重要的，算法的好坏直接决定速度！！！
对于一个整型，只有unsigned才是表示最大的整数范围，比如unsigned short 的范围是0---2^16 = 65535，
如果是直接short 则是最大值 2^15 = 32767, 最小值是 -32768
也就是在C语言中默认是有符号的！！！

##### 数据溢出

无符号数据越界会溢出
比如 unsigned short 类型的，65535+2，就变成了1 ，所以说数据溢出也是从0开始计算的！！！

有符号数据越界会出错,但是不会报错，只是结果是错的！！！
short num = 32767;
num = num + 1;//结果为-32768

>密码也是有溢出的，如果密码溢出就可以跳过密码！！！

如果要打印一个数据的范围，必须引入#include <limits.h>
printf("%d\n",SHRT_MIN );SHRT_MAX

%u 表示无符号十进制！！！
%d 表示有符号十进制！！！
%x 表示无符号十六进制，所谓无符号就是0到正数范围最大值！！！
%o 无符号八进制

所以使用printf打印的时候必须类型匹配！！！

通过以上测试，说明，能编译，不保证数据结果的正确性！！！

#### 各种数据类型的范围

printf("short=%d\nint=%d\nlong=%d\n", sizeof(short),sizeof(int),sizeof(long));

注意：int类型的长度与平台有关，平台有	ARM win32 win64

int的范围:INT_MAX INT_MIN

32位平台 %d 能表示的范围就是int的范围，也就是只能表示到INT_MINT到INT_MAX！！！UINT_MAX 的值已经超出范围 

如果超出这个范围就会出错！！！

从上面超出，从最小负数开始！！！

从下面超出，从最大正数开始！！！

所以：INT_MAX+1 会显示 -最小值 	INT_MAX+10 相当于最小值 +9

所以：INT_MIN-1 会显示 +最大值 INT_MIN-10 就相当于最大值 -9

这就是差之毫厘谬以千里！！！千万小心！！！

还可以总结出：无论怎么样溢出，结果总是在这个类型的范围内，因为计算机始终读取到相同的位数！！！



问：为什么用 %d 来打印 UINT_MAX 结果为-1
答：UINT_MAX超出%的最大值，相当于%d的 最小值+0.5*UNIT_MAX = -1 ，可以用%u来打印出正确结果！！！

#### 随机数的应用

0 ？system("calc") : system("notepad");

这就是C语言中的三目运算符，相当于一个简单的if分支语句
	
	#include <stdio.h>
	#include <stdlib.h>
	#include <time.h>

	int main()
	{
		//声明一个时间类型的变量
		time_t time1;

		//srand为随机数生成器，根据时间来取随机数！
		//time(&time1)作用是获取当前时间，赋给time1变量！！！

		srand((unsigned int)time(&time1));

		//任何数%100都是小于100的数
		int num = rand() % 100;

		printf("%d\n",num);
		num > 80 ? printf("you win") :printf("you lose"),system("notepad");//多个命令用逗号隔开！
		system("pause");

	}

> 注意：一个范围加一个数，相当于在这个范围的左右区间都加上这个数，结果还是一个范围，比如 rand() % 100 + 100 ;就表示(0,100) + 100 ,结果是 (100,200);

> printf函数不会自动转换，所以后面的参数一定要写对形式！！！

#### 实数：

特点：任何两个实数之间的距离是无限的，比如1.1 和 1.2 之间就是无穷无尽的！！！

浮点数：4字节
FLT_MAX FLT_MIN 
%f 表示浮点数
%.10f 表示小数点后有10位
DBL_MAX DBL_MIN

整数是以 一对一 
实数是以指数表示，
浮点：浮动小数点
1.0e10

案例：计算三角形的面积
	
	#define _CRT_SECURE_NO_WARNING //关闭安全检查
	#include <math.h>
	#include <stdio.h>
	#include <stdlib.h>
	int main()
	{
		float a,b,c;
		scanf("%f%f%f",&a,&b,&c);
		printf("%f,%f,%f",a,b,c);

		system("pause");

	}

求平方根：sqrt()

### 字符和字符串详解

字符在计算机内部，内存是以数字表示的，比如a 97，然后根据一定的规则进行替换成字符

字符串就是在内存中存着连续的多个字符

sizeof("") 1 什么也没有表示一个换行，占一个

sizeof("a") 2

sizeof("af") 3

sizeof('a')占四个字节
因为在C语言中，为了拓展 ，字符常量占4个字节，字符变量占一个字节
char str = 'a' ;这样定义的就是字符变量

	#include <stdio.h>
	#include <stdlib.h>

	int main()
	{
		printf("%d\n",sizeof('a'));//4,但是在gcc编译器中是1
		printf("%d\n",sizeof('aa'));//4

		printf("%d\n",sizeof(""));//1 这是空串，用 \0 表示
		printf("%d\n",sizeof("a"));//2
		printf("%d\n",sizeof("aa"));//3
		getchar();
	}	

注意区别：'a' 和 "a" 
'a'就是a，占4字节
"a"是a和\0,占两个字节
%c 表示打印字符
对于printf函数，无论你是什么，只按照字节的方式打印！！！
比如：
	char ch = 'A';
	printf("%d%c",ch,ch);//分别打印65 A
字符在内存中以ascii放式存储，字符0，ascii 48	
字符串的转换就是根据这个来的！！！
比如： 字符'0'，如何变成整数0，可以这样，'0'+0-48

注意：printf("%d",'4');表示字符的编号
注意：printf("%c",4);表示编号对应的字符

大小写的转换：抓住小写字母对应的ascii比大写的大32，所以可以通过 'A'+32 的放式转换成 a

通过字符串就可以执行任何的指令！！！

任何的指令实际上就是通过字符串来下达的！！！

注意：在C语言中字符串是不能相加的

但是可以通过引入另外一个字符变量，通过sprintf函数进行组合
比如：　
	char str1[10] = "ged";//这样定义的是字符串
	char str2[10] = "it";
	char str3[10];
	sprintf(str3,"%s%s",str1,str2);

注意：C语言中没有string类型，所谓的字符串不过是字符的数组罢了！！！没有string这个关键字

sizeof(long long) 8字节
sizeof(double double) 

前面一定要类型转化，否则出错
printf("%f%f",(float)LLong_MAX, (float)LLong_MIN);

问题：float占4字节，为什么可以用来表示long long 呢？
因为：float是实数，实数在计算机中是以指数的形式存放的，所以可以存放一个很大的数据！！！


记住4字节：4294967295
一半（有符号）：2147483647

为什么数据的极限加1会变成0，因为加1就会进位，但是读取的还是由低到高的那几位，所以变成了0！！！

%u 表示无符号十进制，可以表示的范围就是INT_MAX的范围！！！存在溢出
%d 是有符号的，只能表示%u的一半范围！！！出错

溢出和出错的区别：无符号溢出的从0一直往上累加，因为最小的也就是0；
出错分为两种情况：下越界出错，上越界出错

同样一个‘数’，以不同的形式查看结果不一样，比如 10 
可以用十进制，十六进制，八进制，字符的形式查看，结果不同

再比如10和10.0

	int main()
	{
		int num = 10;
		float num2 = 10.0;
		printf("%d\n", num);//10
		printf("%f\n", num);//0.000000 类型不对，解释为0.000000
		printf("%f\n", (float)num);//10.000000强转
		printf("%f\n", num2);//10.000000
		printf("%d\n", num2);//类型不对，解释为0
		printf("%f\n", 10.0);//10.000000
		getchar();
	}

在C语言中我们需要考虑，一个数能否存放的进这个类型中，使用printf输出时，%?的范围能否完全表示这个数，只有能完全表示才能正常输出，否则就会有意想不到的错误！！！

编译器之间是有区别的！！！

数据的使用一定要在一定的范围内：

	%d int char short 
	%u unsigned int 
	%f float double long long 
	以上都是十进制的！！！

求摸运算只能在正数与正数之间！！！不能是实数！！！

函数的调用注意事项：
主函数调用普通函数时，，如果普通函数在上面，可以直接在主函数中调用；
如果普通函数在主函数下面，必须要在主函数中声明有这样的一个函数，比如：int sum(int a,int b);声明一个函数的返回值和参数类型和个数！！！

### 数据类型转换

隐式转换：
实数转整数会舍弃小数点后面的数
整数与正数，结果为正数
正数与实数，结果为实数
如果前面有类型限制，则进一步转为相应的类型
类型不匹配，解释失败，结果为0或者0.000000
总结：运算结果的类型始终等于精度较高的操作数的类型

与C#一样，在进行加、减、乘、除 时，低字节会自动进行类型转换成高字节
	比如：
	char ch = 'A';
	int num = 1;
	printf("%f",sizeof(ch+num));//4
	char占一个字节，int占4字节，相加运算，隐式转为int 4字节！！！

赋值时会自动进行数据类型转换
	int num = 3.0; 结果为3
	int num = 3.3;结果为3
	int ch = 'A';结果为65
	以上操作实际上是，先进行类型转换然后再赋值给相应的变量！！！

强制转换：
printf("%c",(char)65.0);

案例：偷钱程序，专门偷6分钱一下的
实现五舍六入

	#include <stdio.h>
	#include <stdlib.h>

	int main()
	{
		double rmb;
		scanf("%f",&rmb);
		printf("%f.2",rmb);//保留两位小数
		double changermb = (int)(rmb*10+0.4)/10.0;
		//就是利用了这个小数11取整后会舍弃小数部分！
		//如果比原来大，就不管了！！！
		rmb > changermb ? rmb-changermb : printf("偷不了");

	}

对于四舍五入还是五舍六入，只要保证小数点后一位数字，然后+(10-n),取整，然后换算回来

如何实现对一个数第三位五舍六入，第二位四舍五入
比如：123.346
	
	#include <stdio.h>
	#include <stdlib.h>

	int main()
	{
		double num = 123.345;
		double num1 = (int)(num*100+0.4)/100;
		double num = (int)(num1*10+0.5)/10;
		getchar();
	}
	
以上代码完全没有问题，但是在gcc编译器上有漏洞，不能跑成功！！！

代码实现转二进制：
	
	_itoa(num,str,2);//第一个参数就是十进制数，第二个参数就是要打印的字符串，2表示二进制
	printf("%s",str);

	int main()
	{
		int num ;
		scanf("%d",&num);
		char str[32];
		_itoa(num,str,2);
		printf("%s",str);

		system("pause");

	}

### 运算符和表达式

汇编语言指令；

	_asm
	{
		mov eax,num //eax是一个存储器，
		add eax,5 //将num的值移动到eax，eax的值加5
		move num,eax //eax的值赋给num
	}

任何的C语言都会被编译成汇编语言！！！

操作数与运算符：
	100+3 两边的是操作数，中间的是运算符
表达式可以当做是一个操作数的

运算符不能相邻！！！

int 5 * +3;//在最新的编译器里，加减会解释正负
以上相当于 int 5*3;

取模注意事项：
	如果被除数小于除数，结果为被除数，因为商为0，余数只能是被除数

	如果被除数是负数，余数也会是负数，也就是，余数的符号永远与被除数的符号相同！！！

总结：求模运算规律，首先看被除数的符号，确定余数的符号，然后比较被除数和除数的绝对值，如果被除数小，那么余数就为 (符号)被除数；如果被除数大，正常计算...

注意：求模运算只能是整数！！！不可以是 3%4.0

不用求模符号的得出两个数的模？
两数相除，取整，被除数-取整后的商*除数=余数
利用公式：余数 = 被除数 - 商*除数

	int main()
	{
		int x,y;
		scanf("%d%d",&x,&y);
		printf("%d,%d\n",x,y );
		int z = x / y;
		int k = x - z*y;
		printf("%d\n",k );
		system("pause");
	}

案例：实现两位整数，个位和十位的互换
	
	方法一：
	int main()
	{
		int num;
		scanf("%d",&num);
		printf("%d\n",num);
		int y = num / 10;//十位
		//int x = num - 10*y;//个位
		int x = num % 10;//个位

		printf("%d\n",x*10+y);
		system("pause");
	}

	方法二：直接用取模的方式来，个位：%10,十位：%100/10，百位：/100

	其中十位还可以：/10%10

思路：通过%10来取得最低位个位，通过取整/10，/100来不断剔除最低位！！！	

规律：个位直接%10，最高位直接/10^n,中间部分：先取整（十位：/10,百位：/100,千位：/1000），再%10

总结：取整 / 是取得前面数；取模 % 是取得后面的数！！！

比较麻烦的方法：不求模的方法
	无论多少位数的互换都是一样，思路就是，首先取得最高位x（除以10^n），(num-x*n)/10^(n-1)=... 依次如此执行
	取出每一位上的数字，然后根据要求乘以10^n,最后相加即可！！！

驱动只能用C语言写，不能用C++写！！！

### 循环自增

	int i;
	while(i++ < 5)//表示先引用一下，再自增！！！
	{
	//可以在此处插入断点，观察i的变化！！！
	}
注意：自增、自减运算符只能用于变量！！！(num+1)++也是不可以的，因为这是一个表达式！
字符可以自增：char ch = 'A'; ch++
实数也可以自增.

自增、自减的优先级高于乘除法

注意：a+++b 相当于 (a++)+b
因为编译器是从左到有扫描字符的

### 文件的输入输出

比如写好的一个程序，a.exe 
在命令行中输入 a.exe<1.txt> 2.txt
这样的结果是，将1.txt中的内容输入到a.exe 这个程序中处理，然后将处理结果输出到2.txt 这个文件中！！！

在C语言中可以使用system("cd 路径 a.exe<1.txt> 2.txt");函数来实现以上功能。

	#include <stdio.h>
	#include <stdlib.h>
	//文件的输入和输出
	int main()
	{
		char str[32];
		//在扫描输入函数中，字符串是不需要用地址符的！！！因为字符串的名字就是他的内存地址
		scanf("%s",str);
		system(str);
		system("pause");
	}
	就是这样一个程序，我们不直接运行，而是通过a.exe<1.txt> 2.txt这个命令运行。


#### 解决控制台乱码

chcp 
活动的代码页: 936 
这里的936表示当前使用的是简体中文（GB2312）编码。

UTF8代码页的编号：65001

输入CHCP 65001，回车；

仅如此，还是不能支持UTF8的正常显示，你还要在窗体上右键，选择属性，来设置字体；

以上方法并不可行！！！








学习进度 : 3-26 30min





















































学习进度：第五天上午



























