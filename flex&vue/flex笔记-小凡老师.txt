flex笔记总结


Flex，号称移动端的布局神器，是前端开发人员必备技能。
众所周知，传统的web页面开发是基于盒模型，并结合float和position来实现页面布局的，但是这种方式对于一些复杂的布局实现起来比较麻烦，尤其是移动端页面。于是W3C在2009年提出了一种新的方案--flex布局，也叫弹性布局，可以简便、完整、响应式的实现各种页面布局。

掌握了flex，你可以快速搞定各种响应式布局。
掌握了flex，你可以轻松的实现各种图文混排效果。

容器：带有 display:flex; 属性的元素

项目：容器下的直接子元素

主轴：容器中，项目（多个）按照一定的方向排列，默认从左到右排列，排列的方向就是主轴的方向，容器内部主轴方向与容器交集部分就是主轴。起点：左；终点：右

交叉轴：就是与主轴垂直的那个轴。起点：上；终点：下

容器（container）的属性：	
	设置主轴的方向，也就是子元素（项目）的排列方向。
	flex-direction:row || row-reverse ||collum || collum-reverse
	row:从左到右
	row-reverse:从右到左
	column：从上到下
	column-reverse：从下到上
	
	换行：默认不换行，他会自动压缩每个项目的宽度。
	flex-wrap:nowrap || wrap || wrap-reverse
	项目的排列依然按照主轴方向，wrap和wrap-reverse的区别：
	flex-direction:row;

	flex-wrap:wrap;//表示从上到下换行

	flex-wrap:wrap-reverse;//表示从下到上换行

	以上两句的简写：
	flex-flow:row wrap;

	设置项目在主轴的对齐方式：
	justify-content:flex-start/flex-end/space around/space between

	space around：容器很大，项目不足以填充整个容器，所以项目之间会有相等的空间环绕。

	space between：类似两端对齐

	align-items: center;设置项目在交叉轴的位置，参数同justify-content

	.three div:first-child{
		align-self: flex-start;
	}

---

	h-shadow	必需。水平阴影的位置。允许负值。	
	
	v-shadow	必需。垂直阴影的位置。允许负值。	
	
	blur	可选。模糊距离。	
	
	spread	可选。阴影的尺寸。	
	
	color	可选。阴影的颜色。请参阅 CSS 颜色值。	
	
	inset	可选。将外部阴影 (outset) 改为内部阴影。	
	

	
	.container{
			display: flex;
			padding:10px;
			width: 120px;
			height: 120px;
			border:3px solid #ddd;
			border-radius: 10%;
			background: #fff;
			box-shadow: 3px 3px 3px 0px #999;
			margin:5px;
		}

	.four1{
		flex-direction: column;
		justify-content: space-around;//上下分散排列
	}

	.four1 > div{
		display: flex;
		justify-content: space-around;//再左右分散排列
	}

---

第二天：
---
	order:数字
	作用：更改项目在主轴方向的排列顺序，默认为0，值小的在前面。
---
	flex-grow:数值
	放大因子。前提主轴有多余的空间。
	默认值是0，不许放大。
	原理：将主轴多余的空间，按照各个项目的flex-grow的值，成比例分配放大。
---
	flex-shrink:数值;默认值是1
	缩小因子。前提：主轴方向空间不够，且不可换行。

	计算方法：
	1.计算总差值M
	2.加权和：N=flex-shrink*项目宽度之和
	3.缩小后的宽度：项目值-项目值 * flex-shrink /N  * M。

	结果就是：大的项目压缩的更多！！！

	结论：
	1.项目默认会被压缩
	2.flex-shink越大，压缩越多
	3.flex-shink:0;将不会被压缩
	
----
	
	flex-basic:200px;
	设置主轴方向的宽度，与width冲突吗？
	所以它会根据主轴方向，覆盖width或者height。
	也可以使用百分比。参照外部容器container主轴方向的值（height或者width）

---
	
	flex 是flex-grow flex-shrink flex-basis的缩写。
	默认：0 1 auto
	快捷键：auto 1 1 auto 
			none 0 0 auto

	align-self:flex-start space-around flex-end
	可以覆盖，align-items

---

	网格布局
				

--- 
    第三天：百度糯米项目

     
    原生app：苹果、安卓。
    混合app：原生的基础上套一个壳。
    web APP：就是一个移动站。用户通过移动设备去访问。

    移动站和pc站的区别：
    1.交互方式不一样：鼠标、手指
    2.呈现的数据量不一样，屏幕大小不一样
    3.移动站：用户会特别注意“流量”，也就是说要求代码体积要小，所以在使用第三方插件时，就会与pc站不一样。

---

    flex的兼容性问题：

    pc站：没有得到IE低版本的支持。
    移动站：可以使用flex，90%的手机浏览器都是支持flex的。

开始项目：
	
	视口设置
	<meta name="viewport" content="width=devie-width,user-scalable=no" />













