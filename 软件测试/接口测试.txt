接口测试笔记

接口概念:
	 数据的入口和出口,遵循着一定的规则

接口参数化：
  
  CSV参数化
	1.数据准备 新建 .csv 文件，格式为utf-8,每一列以逗号分隔
	2.制作jmeter脚本程序，新建线程组->新建http请求
		新建 CSV data config 

	filename: 我们 .csv 文件的路径名 尽量放在 .jmx 文件的同级目录

	variable names: 给每一列设置名字，方便后面数据的使用

	调用变量： ${dep_ids}
	3.有多少行，就要设置循环次数为几

用户参数：不同点，模拟多个用户，而不是循环次数
	只要设置用户参数，而不用新建外部的csv文件

	添加->前置操作->用户参数->里面添加变量和添加用户->设置变量名->设置每个用户下变量的值

用户自定义变量：
	全局的
	当脚本中出现重复性的代码，可以使用用户自定义变量将其保存起来，方便反复调用
	步骤：添加->配置元件->用户自定义变量 设置变量名和变量值即可

请求默认值：
	当很多的http请求有很多重复的配置值时，可以使用http请求默认值，之后的http请求中就不用设置了

	步骤：添加->配置元件->http请求默认值

函数：
	所谓函数就是jmeter提供的一系列方法

	函数的使用方法：
		1.点击函数按钮
		2.

TRUE，每个用户有自己的计数器；FALSE，使用全局计数器




直连数据库
	使用步骤：
		1.测试计划->浏览（加载第三方插件）

		2.添加jdbc配置 添加->配置元件->jdbc connection configuration
			细节：严格按照文档来

		3.添加jdbc request 添加->sambel->jdbc request

			2 3 步骤中的variable name 要相同

		4.添加结果树查看结果

数据库查询结果的再处理

	variable name 设置成自定义的名字，表示查询出来的所有数据

	建立一个http请求：
		使用查出来的数据，进行搜索： /s?wd=${myvar_3}
			${myvar_3} 表示取出结果集中的第三个数据
	注意：必须先执行 JDBC request 然后再执行http请求 也就是这两个文件的顺序是不能乱的！！！

请求再处理：
	将一个请求结果中的一部分内容取出来，保存在一个变量中，然后新建一个http请求，传递变量进行搜索

	步骤：
	http请求1：
		添加后置操作 xpath-extrator


(.*?) 任意字符 任意格式 第一个


集合点
模拟高并发场景，同一时间，多个用户一起访问
必须使用集合点来模拟实现
1.http请求->新建->定时器->syncxx(同步定时器)

	1.group by 一次能运行多少个用户

	2.timeout 等待时间，当最后一个用户也运行之后，还要不要等待

	注意：如果等待时间设置为0，线程数与group by 中的数，不能整除，会陷入死循环 

	3.聚合报告 多于10个请求的最好使用聚合报告
		samplers 用户数
		Average 平均响应时间
		Error  错误率 （高并发，很容易出现错误）
		throughput 吞吐量 （1s中能运行的个数）
		Received 获取数据 kb/s
		Send 发送数据 kb/s

功能小函数 
__time()
	生成结果
	${__time(yyyy/MM/dd HH:mm:ss,)}	
	如果不设置任何属性，生成的是当前时间戳 以毫秒计算

__random() 生成随机数函数 
	${__Random(2,8,)} 这里的最小值和最大值都是闭区间


第五天 

逻辑判断 if如果
	
循环逻辑 forEach迭代控制器和循环控制器

QPS 每秒查询数
20qps 持续时间10s 一共200次，求平均响应时间，吞吐率


图形监视器
	监视服务器的cpu、内存、网络、硬盘的使用状态

	步骤：
		1.安装窃听程序 直接双击 startAgent.bat
		2.接收数据的程序 
			2.1 找到JMeter的安装目录下的 lib/ext 
			2.2 复制 JMeterPlugins-standard.jar
		3.重启JMeter，添加线程组，设置 循环 永远
		4.添加自己的监听器 pxx-mxx-controller
			点击 add row ,在下拉列表选择要监听的数据
			比如：cpu、 memory、 disk i/o、 network i/o

ftp服务器：
	1. 安装
 
上传：
	2. 新建ftp请求 localhost ，设置 远程文件名（也就是对需要上传的文件进行命名，通常为 用户id_当前时间戳）

	3.local file 需要上传的文件的绝对路径

	4.get表示下载 put表示上传

	5.填写账号和密码信息

	6.点击运行即可把文件上传到ftp软件设置的根目录

下载：

测试片段：
	方法1：
		1.测试计划->右键->TestFragment->在里面创建http请求
		2.新建线程组->右键->逻辑控制器->模块控制器
			右侧找到刚设置的TestFragment 点选即可

	方法2：
		1.测试计划->右键->TestFragment->在里面创建http请求
		2.新建线程组->右键->逻辑控制器->include-controller
			右侧找到浏览按钮，选择要调用的片段所在的jmx文件

			可以实现不同文件之间的片段调用

day06综合练习

	JMeter功能测试：
		1.数据准备：跟之前手工测试阶段完全一样，写测试用例，单独把测试用例放到一个.txt文档中，

		注意：为了测试方便，每组数据最后添加一个逗号分隔，写自己的注释，文件格式为 utf-8

		2.执行批量添加操作，（首先清空之前数据库的内容）

		3.把结果和txt中的注释进行对比，来查看是否为bug

自动化测试流程套路

	1.执行自动化测试之前，肯定已经执行过功能测试了，细节已经执行完毕

	2.当程序进行了更新（增删改），就要进行一次自动化的测试流程，目的是保证新功能对原有的增删改基本流程没有造成影响，只添加最基本的数据即可

	3.步骤：
		为了让自动化是一个完整的过程，所以最先	执行的 肯定是增，最后执行的肯定是删 使用的是 setUP 和 teardown 这两个线程组

性能、压力测试
	除了查询功能，需要进行压力测试，增删改都不需要添加计时器进行压力测试














