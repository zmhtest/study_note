自动化测试

概念:
	让程序代替人去验证程序功能的过程

自动化测试能解决的问题:
	1.回归测试
	2.压力测试
	3.兼容性测试
	4.提高测试效率,保证软件质量

自动化测试的优点:
	1.较少的时间运行更多的测试用例
	2.可以重复运行
	3.减少人为的错误
	4.克服手工测试的局限性	

自动化测试分类:
	1.web
	2.移动端
	3.接口
	4.单元测试

什么web项目适合自动化测试:
	1.需求变更不频繁
	2.项目周期长
	3.需要回归测试

selenium的特点:
	1.开源
	2.跨平台
	3.跨浏览器
	4.支持多种语言
	5.功能强大
	6.成熟稳定





元素定位方式的选择:
	1.在后期版本迭代过程中尽量保证不修改代码 ()

	2. 保证元素的定位更精确

	优先选择:
		1. id 

		2. name 用于后端交互,所以一般是唯一的

		3. 有代表性的属性 type=password 
		type=submit

		4. 其他属性

能够使用cookie的方式绕过登录操作的前提是:浏览器中登录了(当前用户没有退出);

由于tpshop中采用的是session机制,在服务器端进行验证,所以在用户登录过一次的情况下,关闭浏览器,通过Python脚本,利用cookie还是可以登录到系统中的.

可以在脚本中多次使用 driver.add_cookie({}) 的方式添加多个cookie数据.

比较xpath和css的方式:
	都可以通过 标签 属性 的方式对元素进行定位,主要区别是xpath的相对定位时,需要  //*[@属性='值'] 

	//元素[@属性='值']  注意:必须是拥有该属性的元素

将界面截图保存: 
	driver.get_screenshot_as_file('文件地址')

注意:这个文件地址不能还有特殊符号(:*),为了截图文件不被覆盖,往往需要在拼接一个时间
  需要用到的函数:
	time.strftime(%Y%m%d%H%M%S)  
	'文件名{}{}'.format(a,b)






















